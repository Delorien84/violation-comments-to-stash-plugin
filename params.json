{"name":"Violation-comments-to-stash-plugin","tagline":"Analyzes Jenkins workspace to find code analyzer report files, comments Stash pull requests with code analyzer comments.","body":"# Violation Comments to Stash\r\n\r\nTravis CI: [![Build Status](https://travis-ci.org/tomasbjerre/violation-comments-to-stash-plugin.svg?branch=master)](https://travis-ci.org/tomasbjerre/violation-comments-to-stash-plugin)\r\n\r\nCloudBees: [![Build Status](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-stash-plugin/badge/icon)](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-stash-plugin/)\r\n\r\nThis is much like the [Violations](https://wiki.jenkins-ci.org/display/JENKINS/Violations) plugin. Instead of publishing violation reports in Jenkins, it comments pull requests (or individual commits) in Stash.\r\n\r\nCode from the [Violations](https://wiki.jenkins-ci.org/display/JENKINS/Violations) is used through a dependency.\r\n\r\nThere is a screenshot of the configuration GUI [here](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-config.png) and a sample comment may look like [this](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-stash.png).\r\n\r\nAvailable in Jenkins [here](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+Stash+Plugin).\r\n\r\n#Features\r\n* Comment pull requests, or individual commits, with code analyzers comments. Supports:\r\n  * CheckStyle\r\n  * CodeNarc\r\n  * CPPLint\r\n  * CSSLint\r\n  * FindBugs\r\n  * FxCop\r\n  * Gendarme\r\n  * JCEReport\r\n  * JSLint\r\n  * PEP8\r\n  * PerlCritic\r\n  * PMD\r\n  * PyFlakes\r\n  * PyLint\r\n  * Simian\r\n  * StyleCop\r\n  * ReSharper\r\n  * XMLLint\r\n  * ZPTLint\r\n\r\n## Use case\r\nHere is an example use case where a pull request is triggered from Stash, merged, checked and comments added to pull request in Stash.\r\n\r\nYou may also use it for an ordinary build job, to simply comment the commit that was built.\r\n\r\n### Notify Jenkins from Stash\r\nYou may use [Pull Request Notifier for Stash](https://github.com/tomasbjerre/pull-request-notifier-for-stash) to trigger a Jenkins build from an event in Stash. It can supply any parameters and variables you may need. Here is an example URL.\r\n\r\n```\r\nhttp://localhost:8080/jenkins/job/builder/buildWithParameters?FROM=${PULL_REQUEST_FROM_HASH}&TO=${PULL_REQUEST_TO_HASH}&TOSLUG=${PULL_REQUEST_TO_REPO_SLUG}&TOREPO=${PULL_REQUEST_TO_HTTP_CLONE_URL}&FROMREPO=${PULL_REQUEST_FROM_HTTP_CLONE_URL}&ID=${PULL_REQUEST_ID}&PROJECT=${PULL_REQUEST_TO_REPO_PROJECT_KEY}\r\n```\r\n\r\n### Jenkins job\r\nThe Jenkins job may perform the merge, and run any checkers on it, with a shell script build step. It needs to be a parameterized build. To match URL in example above, these parameters are needed.\r\n * ID\r\n * TO\r\n * TOSLUG\r\n * TOREPO\r\n * FROM\r\n * FROMREPO\r\n * PROJECT\r\n\r\nThe shell script may look like this.\r\n\r\n```\r\necho ---\r\necho --- Mergar from $FROM in $FROMREPO to $TO in $TOREPO\r\necho ---\r\ngit clone $TOREPO\r\ncd *\r\ngit reset --hard $TO\r\ngit status\r\ngit remote add from $FROMREPO\r\ngit fetch from\r\ngit merge $FROM\r\ngit --no-pager log --max-count=10 --graph --abbrev-commit\r\n\r\nyour build command here!\r\n```\r\n\r\n### Configure plugin\r\nThis plugin may be added as a post build step to analyse the workspace and report comments back to pull request in Stash. [Here](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-config.png) is an example of how that may look like.\r\n\r\n### The result\r\nAnd finally [here](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-stash.png) is an example stash comment.\r\n\r\n## Developer instructions\r\nInstructions for developers.\r\n\r\n### Get the code\r\n\r\n```\r\ngit clone git@github.com:tomasbjerre/violation-comments-to-stash-plugin.git\r\n```\r\n\r\n### Plugin development\r\nMore details on Jenkins plugin development is available [here](https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial).\r\n\r\nThere is a ```/build.sh``` that will perform a full build and test the plugin.\r\n\r\nSome tests are implemented in maven project in ```/plugin-test```. This is to avoid classpath issues with the plugin. These are web tests that will start Jenkins with the plugin on localhost and perform some configuration tests.\r\n\r\nA release is created like this. You need to clone from jenkinsci-repo, with https and have username/password in settings.xml.\r\n```\r\nmvn release:prepare release:perform\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}